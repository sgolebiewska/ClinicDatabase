USE PROJECT;
GO

CREATE TABLE PATIENT
(
PATIENT_ID varchar(20) PRIMARY KEY CHECK(PATIENT_ID NOT LIKE '%[^A-Za-z0-9]%'),
DATE_OF_BIRTH date NOT NULL,
PESEL varchar(11) UNIQUE NOT NULL CHECK (PESEL LIKE '%[0-9]%' AND LEN(PESEL)=11),
NAME varchar(30) NOT NULL CHECK (NAME NOT LIKE '%[0-9]%' AND LEN(NAME) >= 3),
SURNAME varchar(60) NOT NULL CHECK (SURNAME NOT LIKE '%[0-9]%' AND LEN(SURNAME) >= 3),
CONSTRAINT CHECK_DATE_PATIENT CHECK (DATE_OF_BIRTH <= GETDATE())
);
GO
CREATE TABLE MEDICAL_HISTORY
(
PATIENT_ID varchar(20) REFERENCES PATIENT 
						ON UPDATE CASCADE 
						ON DELETE CASCADE 
						PRIMARY KEY CHECK(PATIENT_ID NOT LIKE '%[^A-Za-z0-9]%'),
BLOOD_TYPE varchar(3) NOT NULL CHECK (BLOOD_TYPE IN ('A+', 'A-', 'B+', 'B-', 'AB+', 'AB-', 'O+', 'O-')),
GENDER varchar(1) NOT NULL CHECK (GENDER IN ('M', 'W'))
);
GO
CREATE TABLE SURGERY
(
SURGERY_ID varchar(10) PRIMARY KEY CHECK(SURGERY_ID NOT LIKE '%[^A-Za-z0-9]%'),
DATE date NOT NULL,
PATIENT_ID varchar(20) NOT NULL REFERENCES MEDICAL_HISTORY(PATIENT_ID)
                        ON UPDATE CASCADE 
                        ON DELETE CASCADE,
CONSTRAINT CHECK_DATE_SURGERY CHECK (DATE <= GETDATE())
);
GO
CREATE TABLE ALLERGY
(
ALLERGY_ID varchar(20) PRIMARY KEY CHECK(ALLERGY_ID NOT LIKE '%[^A-Za-z0-9]%'),
SEVERITY int CHECK (SEVERITY BETWEEN 1 AND 5),
PATIENT_ID varchar(20) NOT NULL REFERENCES MEDICAL_HISTORY(PATIENT_ID)
                        ON UPDATE CASCADE 
                        ON DELETE CASCADE
);
GO
CREATE TABLE IS_ALLERGIC_TO
(
ALLERGY_ID varchar(20) NOT NULL REFERENCES ALLERGY,
PATIENT_ID varchar(20) NOT NULL REFERENCES PATIENT,
PRIMARY KEY(ALLERGY_ID, PATIENT_ID)
);
GO
CREATE TABLE DOCTOR
(
DOCTOR_ID varchar(10) PRIMARY KEY CHECK(DOCTOR_ID NOT LIKE '%[^A-Za-z0-9]%'),
NAME varchar(30) NOT NULL CHECK (NAME NOT LIKE '%[0-9]%' AND LEN(NAME) >= 3),
SURNAME varchar(60) NOT NULL CHECK (SURNAME NOT LIKE '%[0-9]%' AND LEN(SURNAME) >= 3),
ROOM_NUMBER int NOT NULL CHECK(ROOM_NUMBER BETWEEN 1 AND 100)
);
GO
CREATE TABLE TEST_CATALOG
(
TEST_ID varchar(20) PRIMARY KEY CHECK(TEST_ID NOT LIKE '%[^A-Za-z0-9]%'),
NAME varchar(100) NOT NULL,
RANGE_OF_RESULT varchar(60) NOT NULL 
);
GO
CREATE TABLE NURSE
(
NURSE_ID varchar(10) PRIMARY KEY CHECK(NURSE_ID NOT LIKE '%[^A-Za-z0-9]%'),
NAME varchar(30) NOT NULL CHECK (NAME NOT LIKE '%[0-9]%' AND LEN(NAME) >= 3),
SURNAME varchar(60) NOT NULL CHECK (SURNAME NOT LIKE '%[0-9]%' AND LEN(SURNAME) >= 3)
);
GO
CREATE TABLE MEDICAL_TEST
(
TEST_ID varchar(20) REFERENCES TEST_CATALOG 
					ON UPDATE CASCADE 
					ON DELETE CASCADE 
					PRIMARY KEY CHECK(TEST_ID NOT LIKE '%[^A-Za-z0-9]%'),
DATE_TIME datetime NOT NULL,
DOCTOR_NOTES varchar(60) NOT NULL DEFAULT 'None' CHECK (LEN(DOCTOR_NOTES) >= 3),
PATIENT_ID varchar(20) NOT NULL REFERENCES PATIENT(PATIENT_ID)
                        ON UPDATE CASCADE 
                        ON DELETE CASCADE,
NURSE_ID varchar(10) NOT NULL REFERENCES NURSE(NURSE_ID)
                        ON UPDATE CASCADE 
                        ON DELETE CASCADE,
DOCTOR_ID varchar(10) NOT NULL REFERENCES DOCTOR(DOCTOR_ID)
                        ON UPDATE CASCADE 
                        ON DELETE CASCADE,
CONSTRAINT CHECK_DATE_TEST CHECK (DATE_TIME <= GETDATE())
);
GO
CREATE TABLE APPOINTMENT
(
APPOINTMENT_ID varchar(20) PRIMARY KEY CHECK(APPOINTMENT_ID NOT LIKE '%[^A-Za-z0-9]%'),
DOCTOR_ID varchar(10) NOT NULL REFERENCES DOCTOR 
						ON UPDATE CASCADE 
						ON DELETE CASCADE
						CHECK(DOCTOR_ID NOT LIKE '%[^A-Za-z0-9]%'),
PATIENT_ID varchar(20) NOT NULL REFERENCES PATIENT
						ON UPDATE CASCADE 
						ON DELETE CASCADE
						CHECK(PATIENT_ID NOT LIKE '%[^A-Za-z0-9]%'),
DATE_TIME datetime NOT NULL
);
GO
CREATE TABLE ILLNESS_CATALOG
(
ILLNESS_ID varchar(20) PRIMARY KEY CHECK(ILLNESS_ID NOT LIKE '%[^A-Za-z0-9]%'),
NAME varchar(60) NOT NULL,
SYMPTOMS varchar(300) NOT NULL,
RECOMMENDED_TREATMENT varchar(500) NOT NULL
);
GO
CREATE TABLE ILLNESS
(
ILLNESS_ID varchar(20) REFERENCES ILLNESS_CATALOG 
						ON UPDATE CASCADE 
						ON DELETE CASCADE 
						PRIMARY KEY CHECK(ILLNESS_ID NOT LIKE '%[^A-Za-z0-9]%'),
DATE date,
TREATMENT_NOTE varchar(500) NOT NULL,
APPOINTMENT_ID varchar(20) NOT NULL REFERENCES APPOINTMENT(APPOINTMENT_ID)
                        ON UPDATE CASCADE 
                        ON DELETE CASCADE,
CONSTRAINT CHECK_DATE_ILLNESS CHECK (DATE <= GETDATE())
);
GO
CREATE TABLE LONG_TERM_ILLNESS
(
ILLNESS_ID varchar(20) REFERENCES ILLNESS_CATALOG 
						ON UPDATE CASCADE 
						ON DELETE CASCADE
						PRIMARY KEY CHECK(ILLNESS_ID NOT LIKE '%[^A-Za-z0-9]%'),
DATE datetime NOT NULL,
NOTES varchar(300) NOT NULL,
PATIENT_ID varchar(20) NOT NULL REFERENCES MEDICAL_HISTORY(PATIENT_ID)
                        ON UPDATE CASCADE 
                        ON DELETE CASCADE,
CONSTRAINT CHECK_DATE_LTILLNESS CHECK (DATE <= GETDATE())
);
GO
CREATE TABLE MEDICATION_CATALOG
(
MEDICATION_ID varchar(25) PRIMARY KEY CHECK(MEDICATION_ID NOT LIKE '%[^A-Za-z0-9]%'),
NAME varchar(100) NOT NULL,
COMPANY varchar(100) NOT NULL
);
GO
CREATE TABLE RECOMMENDATION
(
ILLNESS_ID varchar(20) NOT NULL REFERENCES ILLNESS_CATALOG,
MEDICATION_ID varchar(25) NOT NULL REFERENCES MEDICATION_CATALOG,
PRIMARY KEY(ILLNESS_ID, MEDICATION_ID)
);
GO
CREATE TABLE PRESCRIPTION
(
PRESCRIPTION_NUMBER varchar(10) PRIMARY KEY CHECK(PRESCRIPTION_NUMBER LIKE '%[0-9]%'),
DATE_START date NOT NULL,
DATE_END date NOT NULL,
PERIODICITY int CHECK (PERIODICITY >= 1) NOT NULL,
APPOINTMENT_ID varchar(20)  NOT NULL REFERENCES APPOINTMENT(APPOINTMENT_ID)
                        ON UPDATE CASCADE 
                        ON DELETE CASCADE,
CONSTRAINT CHECK_DATE_PRESCRIPTION CHECK (DATE_START<DATE_END AND DATE_END <= GETDATE())
);
GO
CREATE TABLE DOSE
(
PRESCRIPTION_NUMBER varchar(10) REFERENCES PRESCRIPTION 
						ON UPDATE CASCADE 
						ON DELETE CASCADE
						NOT NULL CHECK(PRESCRIPTION_NUMBER LIKE '%[0-9]%'),
MEDICATION_ID varchar(25) REFERENCES MEDICATION_CATALOG 
						ON UPDATE CASCADE 
						ON DELETE CASCADE
						NOT NULL CHECK(MEDICATION_ID NOT LIKE '%[^A-Za-z0-9]%'),
NUMBER_OF_DAYS int NOT NULL CHECK(NUMBER_OF_DAYS >= 1),
DOSAGE_DAILY int NOT NULL CHECK(DOSAGE_DAILY >= 1)
PRIMARY KEY(PRESCRIPTION_NUMBER, MEDICATION_ID)
);
GO